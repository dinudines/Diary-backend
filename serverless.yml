# NOTE: update this with your service name
service: contacts-app-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-south-1

  # These environment variables are made available to our functions under process.env
  environment:
    tableName: contacts
  
  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:ap-south-1:*:*"

functions:
  create:
    # Defines an HTTP API endpoint that calls the main function in create.js
    # - path: /contacts
    # - method: POST
    # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross domain api call 
    # - authorizer: authenticate using the AWS IAM role
    handler: api/create.main
    events:
      - http:
          path: contacts
          method: post
          cors: true
          authorizer: aws_iam
  get:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: /contacts/{id}
    # - method: GET
    handler: api/get.main
    events:
      - http:
          path: contacts/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: /contacts
    # - method: GET
    handler: api/list.main
    events:
      - http:
          path: contacts
          method: get
          cors: true
          authorizer: aws_iam
  update:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: /contacts/{id}
    # - method: PUT
    handler: api/update.main
    events:
      - http:
          path: contacts/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    # Defines an HTTP API endpoint that calls the main function in delete.js
    # - path: /contacts/{id}
    # - method: DELETE
    handler: api/delete.main
    events:
      - http:
          path: contacts/{id}
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
